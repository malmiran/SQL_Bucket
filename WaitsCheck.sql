SELECT
     owt.session_id,
     owt.wait_duration_ms,
     owt.wait_type,
     owt.blocking_session_id,
     owt.resource_description,
     es.program_name,
     est.text,
     est.dbid,
     eqp.query_plan,
     es.cpu_time,
     es.memory_usage
 FROM sys.dm_os_waiting_tasks owt
 INNER JOIN sys.dm_exec_sessions es
     ON owt.session_id = es.session_id
 INNER JOIN sys.dm_exec_requests er
     ON es.session_id = er.session_id
 OUTER APPLY sys.dm_exec_sql_text (er.sql_handle) est
 OUTER APPLY sys.dm_exec_query_plan (er.plan_handle) eqp
 WHERE es.is_user_process = 1
 order by 2 desc
 
  CREATE PROCEDURE dbo.usp_AuditEventMessage_Write (  @EventID uniqueidentifier,  @AgentID udt_ad_object_guid,  @EventClassID uniqueidentifier ) AS BEGIN  SET NOCOUNT ON ;  SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;   DECLARE @EventMessage nvarchar( 2048 ) ;   SELECT    @EventMessage = EventClassMessage   FROM    [Event].Class  WHERE    EventClassID = @EventClassID ;   DECLARE @AuditEventParameter TABLE  (   ParameterName nvarchar( 256 ) NOT NULL,   ParameterValue nvarchar( 256 ) NOT NULL  ) ;   INSERT INTO   @AuditEventParameter   (    ParameterName,    ParameterValue   )   SELECT     N'<' + LOWER( ParameterName ) + N'>',    CONVERT( nvarchar( 256 ), ParameterValue )   FROM    Audit.EventParameter   WHERE    EventID = @EventID ;   DECLARE @Cursor cursor ;  SET @Cursor = CURSOR FAST_FORWARD FOR   SELECT    ParameterName,    ParameterValue   FROM    @AuditEventParameter ;   DECLARE @ParameterName nvarchar( 256 ) ;  DECLARE @ParameterValue nvarchar( 256 ) ;   OPEN @Cursor ;  FETCH NEXT FROM @Cursor INTO @ParameterName, @ParameterValue ;   WHILE( @@FETCH_STATUS = 0 )  BEGIN   SET @EventMessage = REPLACE( @EventMessage, @ParameterName, @ParameterValue COLLATE Latin1_General_BIN ) ;    FETCH NEXT FROM @Cursor INTO @ParameterName, @ParameterValue ;   END ;   CLOSE @Cursor   IF( CHARINDEX( N'<server-name>', @EventMessage COLLATE Latin1_General_BIN ) > 0 OR CHARINDEX( N'<domain-name>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  BEGIN   DECLARE @ServerName udt_nt_netbios_name ;   DECLARE @DomainName udt_nt_netbios_name ;    SELECT    @ServerName = ISNULL( TSR.ServerName, TWP.MachineName ),    @DomainName = ISNULL( TDN.DomainName, TWP.WorkgroupName )   FROM    [System].Agent AS SAT    LEFT OUTER JOIN Topology.[Server] AS TSR     ON SAT.AgentID = TSR.ServerID    LEFT OUTER JOIN Topology.Domain AS TDN     ON TSR.DomainID = TDN.DomainID    LEFT OUTER JOIN Topology.Workgroup AS TWP     ON SAT.AgentID = TWP.MachineID   WHERE    SAT.AgentID = @AgentID ;    IF( @ServerName IS NOT NULL )    SET @EventMessage = REPLACE( @EventMessage, N'<server-name>', @ServerName COLLATE Latin1_General_BIN ) ;    IF( @DomainName IS NOT NULL )    SET @EventMessage = REPLACE( @EventMessage, N'<domain-name>', @DomainName COLLATE Latin1_General_BIN ) ;  END ;   IF( CHARINDEX( N'<new-value>', @EventMessage COLLATE Latin1_General_BIN ) > 0 OR CHARINDEX( N'<old-value>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  OR ( CHARINDEX( N'<new-server-name>', @EventMessage COLLATE Latin1_General_BIN ) > 0 OR CHARINDEX( N'<old-server-name>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  OR ( CHARINDEX( N'<new-query-policy-dn>', @EventMessage COLLATE Latin1_General_BIN ) > 0 OR CHARINDEX( N'<old-query-policy-dn>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  BEGIN   DECLARE @ValueOld nvarchar( 1024 ) ;   DECLARE @ValueNew nvarchar( 1024 ) ;    SELECT    @ValueOld = CASE WHEN MissingOld = 1 THEN N'<Not-Set>' ELSE ValueOld END,    @ValueNew = CASE WHEN MissingNew = 1 THEN N'<Not-Set>' ELSE ValueNew END   FROM    Audit.Event AS AET   WHERE    EventID = @EventID ;    IF( ( @ValueOld IS NOT NULL ) AND ( LEN( @ValueOld ) = 0 ) )     SET @ValueOld = N'EMPTY' ;    IF( @ValueOld IS NOT NULL )   BEGIN    SET @EventMessage = REPLACE( @EventMessage, N'<old-value>', @ValueOld COLLATE Latin1_General_BIN ) ;    SET @EventMessage = REPLACE( @EventMessage, N'<old-server-name>', @ValueOld COLLATE Latin1_General_BIN ) ;    SET @EventMessage = REPLACE( @EventMessage, N'<old-query-policy-dn>', @ValueOld COLLATE Latin1_General_BIN ) ;   END    IF( ( @ValueNew IS NOT NULL ) AND ( LEN( @ValueNew ) = 0 ) )    SET @ValueNew = N'EMPTY' ;    IF( @ValueNew IS NOT NULL )   BEGIN    SET @EventMessage = REPLACE( @EventMessage, N'<new-value>', @ValueNew COLLATE Latin1_General_BIN ) ;    SET @EventMessage = REPLACE( @EventMessage, N'<new-server-name>', @ValueNew COLLATE Latin1_General_BIN ) ;    SET @EventMessage = REPLACE( @EventMessage, N'<new-query-policy-dn>', @ValueNew COLLATE Latin1_General_BIN ) ;   END  END ;   IF( CHARINDEX( N'<policy-name>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  BEGIN   DECLARE @PolicyName udt_ad_common_name ;    SELECT    @PolicyName = PolicyName   FROM    Audit.EventGroupPolicy   WHERE    EventID = @EventID ;    IF( ( @PolicyName IS NOT NULL ) AND ( LEN( @PolicyName ) = 0 ) )    SET @PolicyName = N'EMPTY' ;    IF( @PolicyName IS NOT NULL )    SET @EventMessage = REPLACE( @EventMessage, N'<policy-name>', @PolicyName COLLATE Latin1_General_BIN ) ;  END ;   IF( CHARINDEX( N'<object-canonical>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  BEGIN   DECLARE @ObjectCanonical udt_ad_canonical_name ;    SELECT    @ObjectCanonical = ObjectCanonical   FROM    Audit.EventDirectory   WHERE    EventID = @EventID ;      IF( @ObjectCanonical IS NOT NULL )    SET @EventMessage = REPLACE( @EventMessage, N'<object-canonical>', @ObjectCanonical COLLATE Latin1_General_BIN ) ;  END ;   IF( CHARINDEX( N'<adam-object-cn>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  BEGIN   DECLARE @ObjectCN udt_ad_canonical_name ;    SELECT    @ObjectCN = ObjectCanonical   FROM    Audit.EventADAM   WHERE    EventID = @EventID ;      IF( @ObjectCN IS NOT NULL )    SET @EventMessage = REPLACE( @EventMessage, N'<adam-object-cn>', @ObjectCN COLLATE Latin1_General_BIN ) ;  END ;   IF( CHARINDEX( N'<path>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  BEGIN   DECLARE @Path udt_nt_url_path ;    SELECT    @Path = FolderPath + [FileName]   FROM    Audit.EventFileSystem   WHERE    EventID = @EventID     IF( @Path IS NOT NULL )    SET @EventMessage = REPLACE( @EventMessage, N'<path>', @Path COLLATE Latin1_General_BIN ) ;  END ;    IF( CHARINDEX( N'<share-name>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  BEGIN   DECLARE @ShareName udt_nt_share_name ;    SELECT    @ShareName = ShareName   FROM    Audit.EventFileSystem   WHERE    EventID = @EventID ;    IF( @ShareName IS NOT NULL )    SET @EventMessage = REPLACE( @EventMessage, N'<share-name>', @ShareName COLLATE Latin1_General_BIN ) ;  END ;    IF( CHARINDEX( N'<service-display-name>', @EventMessage COLLATE Latin1_General_BIN ) > 0 )  BEGIN   DECLARE @ServiceName udt_nt_service_name ;    SELECT    @ServiceName = ISNULL( DisplayName, ServiceName )   FROM    Audit.EventService   WHERE    EventID = @EventID ;    IF( @ServiceName IS NOT NULL )    SET @EventMessage = REPLACE( @EventMessage, N'<service-display-name>', @ServiceName COLLATE Latin1_General_BIN ) ;  END ;   INSERT INTO   Audit.EventMessage   (    EventID,    EventMessage   )   VALUES   (    @EventID,    @EventMessage   ) ; END ; 